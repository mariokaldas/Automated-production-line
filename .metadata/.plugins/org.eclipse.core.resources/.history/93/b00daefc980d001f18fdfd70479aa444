/*
 * APP.h
 *
 *  Created on: Apr 18, 2024
 *      Author: mario
 */

#ifndef APP_APP_H_
#define APP_APP_H_


/****************************************************************************************
 *                     						Includes
 * ***************************************************************************************/

#include "HAL/MCAL_ATMEGA32/std_types.h"

/****************************************************************************************
 *                     					Global variables
 * ***************************************************************************************/

extern enum states currentState;/* will be used in main */

/****************************************************************************************
 *                     					Types declaration
 * ***************************************************************************************/

enum states{

	WAIT,ASSEMBLY,STORE
};

enum products{

	GREEN_BASE, GREEN_COVER, RED_BASE, RED_COVER
};

/* These flags indicates if this store position is occupied or not (instead of IR sensors) */
union storePositions_flags{

	/* this variable used to access flags as a bulk to loop over them */
	uint8 store;

	struct {

		uint8 store1_Green:1;
		uint8 store2_Green:1;
		uint8 store3_Red:1;
		uint8 store4_Red:1;

	}store_flags;
};

/* These flags indicates if this assembly position is occupied or not (instead of IR sensors) */
union assemblyPositions_flags{

	/* this variable used to access flags as a bulk to loop over them */
	uint8 assembly;

	struct{

		uint8 assembly1_GreenBase:1;
		uint8 assembly2_GreenCover:1;
		uint8 assembly3_GreenCover:1;
		uint8 assembly4_RedBase:1;
		uint8 assembly5_RedCover:1;
		uint8 assembly6_RedCover:1;

	}assembly_flags;
};
/* This structure contain the co-ordination of every position */
struct position{

	uint32 x;
	uint32 y;
	uint16 z;
};

/* mapping for every position steps in project whether its assembly or store */
enum positons_steps{

	XPOS1,XPOS2,XPOS3,YPOS1,YPOS2,YPOS3,YPOS4,ZPOS_CONVEYER,ZPOS_LOW
};


/* object on conveyer position steps  */
enum objectPosition{

	XOBJECT=12432,YOBJECT /* Object position on the conveyer */
};

/*
 * Robotic arm will always be in one of these states
 * 1- waiting for the object in feeding unit to arrive at the edge of conveyer to be assembled
 * 2- assembly phase
 * 3- storing phase
 *  */


/****************************************************************************************
 *                     					Functions prototype
 * ***************************************************************************************/

void APP_init(void);
void APP_wait(void);
void APP_assembly(void);
void APP_store(void);

#endif /* APP_APP_H_ */
